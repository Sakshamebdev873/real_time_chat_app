// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  username         String
  email            String        @unique   
  password         String
  accessToken      String?
  refreshToken     String?
  createdAt        DateTime      @default(now())
  groups           GroupUser[]
  sentMessages     Message[]     @relation("SentMessages")
  receivedMessages Message[]     @relation("ReceivedMessages")
  readReceipts     MessageRead[]
}

model Group {
  id        Int         @id @default(autoincrement())
  name      String
  createdAt DateTime    @default(now())
  description String
  users     GroupUser[]
  messages  Message[]
  isDeleted Boolean @default(false)
}

model GroupUser {
  id      Int       @id @default(autoincrement())
  userId  Int
  groupId Int
  role    GroupRole @default(MEMBER)
  user    User      @relation(fields: [userId], references: [id])
  group   Group     @relation(fields: [groupId], references: [id])
  @@unique([userId, groupId])
}

model Message {
  id           Int           @id @default(autoincrement())
  content      String
  createdAt    DateTime      @default(now())
  senderId     Int
  sender       User          @relation("SentMessages", fields: [senderId], references: [id])
  receiverId   Int?
  receiver     User?         @relation("ReceivedMessages", fields: [receiverId], references: [id])
  groupId      Int?
  group        Group?        @relation(fields: [groupId], references: [id])
  readReceipts MessageRead[]
  updatedAt    DateTime?
  isDeleted      Boolean @default(false)
}

model MessageRead {
  id        Int      @id @default(autoincrement())
  messageId Int
  userId    Int
  readAt    DateTime @default(now())
  message   Message  @relation(fields: [messageId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([messageId, userId])
}

enum GroupRole {
  ADMIN
  MEMBER
}
